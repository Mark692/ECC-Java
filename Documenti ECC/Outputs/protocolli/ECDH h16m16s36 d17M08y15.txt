Test del protocollo ECDH
ECDH (Elliptic Curve Diffie Hellman) è un protocollo per l'accordo di una chiave crittografica

Allo scopo immaginiamo due utenti, Alice e Bob, che vogliono scambiarsi messaggi in modo sicuro sulla rete internet
Il primo passo da compiere è scegliere la curva.

Dettagli sulla curva utilizzata
Autore: NIST
Nome: P521

Equazione della curva: y^2 = x^3 + ax + b mod(p)
a = -3
b = 1093849038073734274511112390766805569936207598951683748994586394495953116150735016013708737573759623248592132296706313309438452531591012912142327488478985984
p = 6864797660130609714981900799081393217269435300143305409394463459185543183397656052122559640661454554977296311391480858037121987999716643812574028291115057151
Punto generatore G = (x, y)
x = 2661740802050217063228768716723360960729859168756973147706671368418802944996427808491545080627771902352094241225065558662157113545570916814161637315895999846
y = 3757180025770020463545507224491183603594455134769762486694567779615544477440556316691234405012945539562144444537289428522585666729196580810124344277578376784
Ordine n (n*G è il punto all'infinito): 6864797660130609714981900799081393217269435300143305409394463459185543183397655394245057746333217197532963996371363321113864768612440380340372808892707005449
Cofattore h (n*h è la cardinalità della curva): 1
Livello di sicurezza = 256 bit
La curva è buona per applicazioni crittografiche


Passiamo ora alla generazione delle chiavi crittografiche:
Solitamente indicata con "d", la chiave privata è un numero casuale scelto nell'intervallo [1, n-1]
Alice sceglie: 1287097036267218449448134044557237271678492
Bob   sceglie: 149650995136113992509

La chiave pubblica P è, invece, un punto della curva. Questa viene calcolata come P = d*G:
Alice ottiene: (2099443256688268790477709655919882670593089687228661771121768202099479568940126238163050852923887315006623938383431318362162111768330698422554855898758384, 4566936199675335002401761896122796149275738459355678455643837458723974306184129160640015225611450574258539700532689048085315550421800651960606505281970789418)
Bob   ottiene: (3848394723422239984191279541547092999356500530099993221343942780307081426592294400424334219001599470833952256359843494015076873418491040786881179397613718894, 1790734625939224759224737761143478301350131932959607204401300562097871064642928432004321854108477090275379596310169809915226702705611230994622686760350962335)

Adesso bisogna scambiare le chiavi pubbliche.
Una volta scambiate, i due utenti avranno una terna di valori ciascuno:
Alice ha (d_Alice, P_Alice, P_Bob) mentre Bob ha (d_Bob, P_Bob, P_Alice)

Finalmente è possibile calcolare la chiave simmetrica
Alice calcola: K = d_Alice * P_Bob = 
(1493336365252625416136113012325048511270597099321279752017031796045267359415089575287600345774219279420262633258131585796729874674272182897112151650662741846, 3186499483679189043806750280320744464647296770646367227439093754517056260513840975391314902152726468923715637112431992928034015299358738147950942349863844363)
Bob   calcola: K = d_Bob * P_Alice = 
(1493336365252625416136113012325048511270597099321279752017031796045267359415089575287600345774219279420262633258131585796729874674272182897112151650662741846, 3186499483679189043806750280320744464647296770646367227439093754517056260513840975391314902152726468923715637112431992928034015299358738147950942349863844363)
Si noti come le due chiavi corrispondano allo stesso punto della curva


Conclusa la generazione della chiave simmetrica è possibile scambiarsi messaggi in modo sicuro.
Alice vuole mandare un messaggio a Bob
Il messaggio è: Mi hai tradita, addios!

Tramite i parametri a lei noti, Alice può codificare e crittografare ogni carattere del messaggio in punti della curva
Il messaggio che invierà a Bob è: 

03C57C4F6891275A14D6F92E754437D77722F4F144130EBC11DD334CC9CFAD265DD39D28E3F564C8F83DF04D2BA7BBEA78928F92A476C20A6B3C7587DB60AB7F3B76
0310AC5FA263AF3980188C87434A45DF07D7ED994B7F2FDB4BF70995C7B4A05331AE2137A5EDEFF01D38244509CE558D5B59C2C9B11D05DC343DD776F40710576ADC1
02139966F3B9789AB987221CE5775DDFFC13D91FD3DE3BEA2C58132D962AD509C2DA08A6B8AA5A03DEDF643BCD1B13F7C4A515EEFC35B95497F057B7133D2765EF6A3
037EF04D934D831080B5628C8D7D0C10DB1B2948B47BD0691BFFB87BA296DFE5FDB00CE139D796948DB4431E667734CC54D02872A051CC5797CD14D3C81A92C4EEEC
021748C4C696BDB93EF9405AD8649CEC0E2C225BB4F19EEA66E2D6F970FFC183C46C89F22832ECDAECBB8345B6F795D6DE660F0BA24C6DAEB7FBE60CA8D3C3FC0D8BE
0310AC5FA263AF3980188C87434A45DF07D7ED994B7F2FDB4BF70995C7B4A05331AE2137A5EDEFF01D38244509CE558D5B59C2C9B11D05DC343DD776F40710576ADC1
02139966F3B9789AB987221CE5775DDFFC13D91FD3DE3BEA2C58132D962AD509C2DA08A6B8AA5A03DEDF643BCD1B13F7C4A515EEFC35B95497F057B7133D2765EF6A3
031E2786147E35A53FDF4EA35D893BC203B284267AE6AC6A2C9918BD94C4EAA1286FA6C92D9DCAC45B041243574565E2B28E7A5FDEA482C032CF55ECC3D8E467820E4
03CF07206FB65D18E7722FCD9B76AA28C77CDBFA1FC36E1F5103148372E205627B553CD6943E4A5542532AECE51B547F238CD4AC6A08F9C163F126175A5577DF94E
021748C4C696BDB93EF9405AD8649CEC0E2C225BB4F19EEA66E2D6F970FFC183C46C89F22832ECDAECBB8345B6F795D6DE660F0BA24C6DAEB7FBE60CA8D3C3FC0D8BE
035594FCFA036E52AE015B4F518411477E4FC011ED9B23F77E1F4B1CAF72EA6570ECC741FCCA57FE20F630D81D8E1D540E2D9DCA81728277E5DF2209C20E76B134CE
0310AC5FA263AF3980188C87434A45DF07D7ED994B7F2FDB4BF70995C7B4A05331AE2137A5EDEFF01D38244509CE558D5B59C2C9B11D05DC343DD776F40710576ADC1
031E2786147E35A53FDF4EA35D893BC203B284267AE6AC6A2C9918BD94C4EAA1286FA6C92D9DCAC45B041243574565E2B28E7A5FDEA482C032CF55ECC3D8E467820E4
021748C4C696BDB93EF9405AD8649CEC0E2C225BB4F19EEA66E2D6F970FFC183C46C89F22832ECDAECBB8345B6F795D6DE660F0BA24C6DAEB7FBE60CA8D3C3FC0D8BE
0256CA9684E153DD66DE5735B783BAF3920AEB38184A1E2A506716DF9AC2D9D42DCF4B6938593ADB64869072AAF08CE2782BA504ED4B95470EF63A5A76347E58DAC
02139966F3B9789AB987221CE5775DDFFC13D91FD3DE3BEA2C58132D962AD509C2DA08A6B8AA5A03DEDF643BCD1B13F7C4A515EEFC35B95497F057B7133D2765EF6A3
021748C4C696BDB93EF9405AD8649CEC0E2C225BB4F19EEA66E2D6F970FFC183C46C89F22832ECDAECBB8345B6F795D6DE660F0BA24C6DAEB7FBE60CA8D3C3FC0D8BE
035594FCFA036E52AE015B4F518411477E4FC011ED9B23F77E1F4B1CAF72EA6570ECC741FCCA57FE20F630D81D8E1D540E2D9DCA81728277E5DF2209C20E76B134CE
035594FCFA036E52AE015B4F518411477E4FC011ED9B23F77E1F4B1CAF72EA6570ECC741FCCA57FE20F630D81D8E1D540E2D9DCA81728277E5DF2209C20E76B134CE
0310AC5FA263AF3980188C87434A45DF07D7ED994B7F2FDB4BF70995C7B4A05331AE2137A5EDEFF01D38244509CE558D5B59C2C9B11D05DC343DD776F40710576ADC1
02128B77B3F256B9A4F32B92E01D476185A828270D3893114AFDB7D3C3D856DC4861D56080E82A461FFA0A4E1EBEE35C67F3F1AB457E776085966FD7C7BD7C6176D2
02FA7F774B9B09C2BE75CAE0A4A967458AB71B937599C6D24A753AD6FFA32911E1C16B1B56E442C5AC50C6130A25C0018AE12D29A98668648287F3D7F907E8D31AD3
03CD1191B6CEE0FA4AE73182371ABEE3C0FDF72A0E11C32835F1A329CC5218E643A0DE0302489719556A604B95CAE12EE6C04590918CF6669B768FBD3E0C57717E3D


Bob riceve il messaggio e può decifrarlo grazie ai parametri a lui noti.
Il messaggio che ottiene è:
Mi hai tradita, addios!